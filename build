#!/usr/bin/env bash
set -e

DEST_DIR="bin"

if [ ! -d ${DEST_DIR} ]; then
	mkdir ${DEST_DIR}
fi

# Add version/commit/date into binary
# In case of TravisCI, need to check error code of 'git describe'.
set +e
git describe --tags --abbrev=0 > /dev/null 2>&1
if [ "$?" != "0" ]; then
	VERSION="master"
	COMMIT="OK"
else
	VERSION=$(git describe --tags --abbrev=0)
	COMMIT=$(git rev-parse --verify HEAD)
fi

ANNOTATION=${1:-"mynetworks"}
CRD_PLURAL=${2:-"network-definitions"}


set -e
DATE=$(date --iso-8601=seconds)
LDFLAGS="-X main.version=${VERSION:-master} -X main.commit=${COMMIT} -X main.date=${DATE}"
LDFLAGS="$LDFLAGS -X github.com/intel/multus-cni/k8sclient.annotation=${ANNOTATION} -X github.com/intel/multus-cni/k8sclient.crdPlural=${CRD_PLURAL}"

# echo $LDFLAGS
export CGO_ENABLED=0
export GO111MODULE=on

ORG_PATH="github.com/intel"
REPO_PATH="${ORG_PATH}/multus-cni"

if [ ! -h gopath/src/${REPO_PATH} ]; then
 		mkdir -p gopath/src/${ORG_PATH}
 		ln -s ../../../.. gopath/src/${REPO_PATH} || exit 255
fi
cd gopath/src/${REPO_PATH}
export GOBIN=${PWD}/bin
export GOPATH=${GOPATH}:${PWD}/gopath

export GO111MODULE=on

echo "Building plugins"
go build -o ${DEST_DIR}/multus -tags no_openssl -ldflags "${LDFLAGS}" "$@" ./multus
go build -o ${DEST_DIR}/multus-ipam ./multus-ipam
go build -o ${DEST_DIR}/multus-vxlan ./multus-vxlan

